---
import CommonLayout from "../../../layouts/CommonLayout.astro";
import { TOKEN_COOKIE_NAME } from "../../../libs/const";
import {
  CsrfManager,
  DEFAULT_CSRF_TOKEN_NAME,
} from "../../../libs/repository/csrf";
import { UserManager } from "../../../libs/repository/user";
import { csrfVerify } from "../../../libs/utils";
import { isCookieLogin } from "../../../libs/utils/is-login";

if (!(await isCookieLogin(Astro.cookies)))
  return Astro.redirect("/account/login");

const currentUser = await UserManager.fromSessionToken(
  Astro.cookies.get(TOKEN_COOKIE_NAME).value as string
);
const currentUserAuth = await currentUser.getAuth();
if (currentUserAuth === null)
  return new Response(null, {
    status: 500,
    statusText: "Internal Server Error",
  });

let formInvalid = false;
let formInvalidMessage = "";
let csrfToken = "";
switch (Astro.request.method) {
  case "GET": {
    break;
  }
  case "POST": {
    const body = await Astro.request.formData();
    const cvr = await csrfVerify(body);
    if (cvr !== null) return cvr;
    if (!body.has("current_password") || !body.has("new_password")) {
      formInvalid = true;
      formInvalidMessage = "Malformed form.";
      break;
    }
    if (
      !(await currentUser.validatePassword(
        body.get("current_password") as string
      ))
    ) {
      formInvalid = true;
      formInvalidMessage = "Invalid current password.";
      break;
    }
    await currentUser.changePassword(body.get("new_password") as string);
    break;
  }
}

if (Astro.request.method === "GET" || formInvalid) {
  const cm = new CsrfManager();
  csrfToken = await cm.generateToken();
}
---

<CommonLayout>
  {
    Astro.request.method === "GET" || formInvalid ? (
      <>
        <h1>Change your password</h1>
        {formInvalid && (
          <div>
            <p>{formInvalidMessage}</p>
          </div>
        )}
        <form method="post">
          <input
            type="password"
            name="current_password"
            placeholder="Current password"
            required
          />
          <input
            type="password"
            name="new_password"
            placeholder="New password"
            required
          />
          <input
            type="hidden"
            name={DEFAULT_CSRF_TOKEN_NAME}
            value={csrfToken}
          />
          <input type="submit" />
        </form>
      </>
    ) : (
      <>
        <p>Password has been changed.</p>
      </>
    )
  }
</CommonLayout>
